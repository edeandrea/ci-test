name: CI schedule test

env:
  DEFAULT_TIMEFRAME: "24 hours"

on:
  workflow_dispatch:
  # schedule:
  #   # - cron: "0 0 * * *"
  #   - cron: "* * * * *"

concurrency:
  group: "workflow = ${{ github.workflow }}, ref = ${{ github.event.workflow_run.head_branch || github.event.ref || github.ref }}"
  cancel-in-progress: false

defaults:
  run:
    shell: bash

jobs:
  calculate-refs:
    runs-on: ubuntu-latest
    outputs:
      ref: ${{ steps.calculate_branch.outputs.ref}}
      branch: ${{ steps.calculate_branch.outputs.branch}}
    steps:
      - name: Calculate Branch
        id: calculate_branch
        run: |
          if [[ ${{ github.event_name }} == 'workflow_run' ]]; then
            echo "ref=${{ github.event.workflow_run.head_commit.id }}" >> $GITHUB_OUTPUT
            echo "branch=${{ github.event.workflow_run.head_branch }}" >> $GITHUB_OUTPUT
          elif [[ ${{ github.event_name}} == 'workflow_dispatch' ]]; then
            echo "ref=${{ github.sha }}" >> $GITHUB_OUTPUT
            echo "branch=${{ github.ref_name }}" >> $GITHUB_OUTPUT
          elif [[ ${{ github.event_name }} == 'schedule' ]]; then
            echo "ref=${{ github.sha }}" >> $GITHUB_OUTPUT
            echo "branch=${{ github.ref_name }}" >> $GITHUB_OUTPUT
          fi

  check-commit-count:
    needs: calculate-refs
    runs-on: ubuntu-latest
    outputs:
      has_commits: ${{ steps.calculate_commits.outputs.has_commits}}
      ref: ${{ needs.calculate-refs.outputs.ref}}
      branch: ${{ needs.calculate-refs.outputs.branch}}
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
          ref: ${{ needs.calculate-refs.outputs.branch }}

      - name: Print commits
        run: |
          git log --oneline --since '${{ env.DEFAULT_TIMEFRAME }} ago'
          echo "Num commits = $(git log --oneline --since '${{ env.DEFAULT_TIMEFRAME }} ago' | wc -l)"

      - name: Check whether workflow should run
        id: calculate_commits
        run: |
          if [[ ${{ github.event_name }} == 'schedule' ]]; then
            if [[ $(git log --oneline --since '${{ env.DEFAULT_TIMEFRAME }} ago' | wc -l) -gt 0 ]]; then
              echo "has_commits=true" >> $GITHUB_OUTPUT
            else
              echo "has_commits=false" >> $GITHUB_OUTPUT
            fi
          else
            echo "has_commits=true" >> $GITHUB_OUTPUT
          fi

      - name: Print has_commits
        run: echo "has_commits = ${{ steps.calculate_commits.outputs.has_commits }}"

  calculate-modules:
    needs: check-commit-count
    runs-on: ubuntu-latest
    if: needs.check-commit-count.outputs.has_commits == 'true'
    outputs:
      projects_matrix: ${{ steps.calculate_projects.outputs.projects_matrix }}
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
          ref: ${{ needs.check-commit-count.outputs.branch }}
          
      - name: Setup Java
        uses: actions/setup-java@v4
        with:
          java-version: 21
          distribution: temurin

      - name: Calculate projects
        id: calculate_projects
        run: |
          json=$(curl -Ls https://sh.jbang.dev | bash -s - .github/calculateModules.java ${{ env.DEFAULT_TIMEFRAME }})
          echo "${json}"
          echo "projects_matrix=${json}" >> $GITHUB_OUTPUT

  build-jvm-image:
    needs: 
      - check-commit-count
      - calculate-modules
    if: (needs.check-commit-count.outputs.has_commits == 'true') && (github.repository == 'edeandrea/ci-test') && (contains(fromJSON('["workflow_dispatch", "schedule"]'), github.event_name) || ((github.event_name == 'worflow_run') && ((github.event.workflow_run.event == 'push') || (github.event.workflow_run.event == 'workflow_dispatch') && (github.event.workflow_run.conclusion == 'success') && (github.event.workflow_run.head_branch == 'main'))))
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix: 
        java:
          - '17'
        arch:
          - amd64
          - arm64
        project: ${{ fromJson(needs.calculate-modules.outputs.projects_matrix) }}
    steps:
      - name: Print matrix vars (${{ matrix.arch }}-${{ matrix.project.name }}-java${{ matrix.java }}-${{ matrix.project.openai-type }})"
        run: |
          echo "matrix.java = ${{ matrix.java }}"
          echo "matrix.arch = ${{ matrix.arch }}"
          echo "matrix.project.name = ${{ matrix.project.name }}"
          echo "matrix.project.openai-type = ${{ matrix.project.openai-type }}"
      
      - name: Print Github context
        env:
          GITHUB_CONTEXT: ${{ toJson(github)}}
        run: echo $GITHUB_CONTEXT

      - name: Print vars
        run: |
          echo "github.event_name = ${{ github.event_name }}"
          echo "github.repository = ${{ github.repository }}"
          echo "REF = ${{ needs.check-commit-count.outputs.ref }}"
          echo "BRANCH = ${{ needs.check-commit-count.outputs.branch }}"

      - uses: actions/checkout@v4
        with:
          ref: ${{ needs.check-commit-count.outputs.ref }}

      - name: Print filesystem
        run: tree -a .
          